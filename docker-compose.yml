haproxy:
  image: dockercloud/haproxy:1.2.1
  ports:
    - '80:80'
  links:
    - api
    - mqtt

job:
  image: willko/wko-api:latest
  command: npm run dev
  environment:
  - DEBUG=billy*,db*,ref*,app*,-app:route*
  - DEBUG_COLORS=true
  - SERVICES=es,mqtt,jobs,server
  - 'DB_URL=postgres://dev:dev@db:5432/dev'
  - 'ES_URL=http://es:9200'
  - 'MQTT_URL=mqtt://mqtt:1883'
  volumes:
    - ./backend/:/opt/backend/container
  links:
    - db
    - es
    - mqtt

api:
  image: willko/wko-api:latest
  command: npm run dev
  environment:
    - DEBUG=billy*,db*,server*,route*,ref*,app*
    - DEBUG_COLORS=true
    - SERVICES=es,mqtt,server
    - 'DB_URL=postgres://dev:dev@db:5432/dev'
    - 'ES_URL=http://es:9200'
    - VIRTUAL_HOST=*,https://*
    - JWT_SECRET=dev-secret
    - 'MQTT_URL=mqtt://mqtt:1883'
  ports:
    - 1337
  volumes:
    - ./backend/:/opt/backend/container
  links:
    - db
    - es
    - mqtt

db-ops:
  image: willko/wko-api:latest
  command: echo 'no-op'
  environment:
    - DEBUG=billy*,db*,es*
    - DEBUG_COLORS=true
    - SERVICES=es,db-ops
    - 'DB_URL=postgres://dev:dev@db:5432/dev'
    - 'ES_URL=http://es:9200'
  volumes:
    - ./backend/:/opt/backend/container
  links:
    - db
    - es

db:
  image: postgres:9.6
  ports:
    - '5432:5432'
  environment:
    - POSTGRES_DB=dev
    - POSTGRES_PASSWORD=dev
    - POSTGRES_USER=dev

es:
  image: docker.elastic.co/elasticsearch/elasticsearch:6.4.0
  environment:
    - 'discovery.type=single-node'
  ports:
    - 9200:9200
    - 9300:9300

kibana:
  image: docker.elastic.co/kibana/kibana:6.4.0
  environment:
    SERVER_NAME: kibana
    ELASTICSEARCH_URL: http://es:9200
  links:
    - es
  ports:
    - 5601:5601

mqtt:
  image: erlio/docker-vernemq:1.5.0
  environment:
    - DOCKER_VERNEMQ_ALLOW_ANONYMOUS=on
    - VIRTUAL_HOST=mqtt*,https://mqtt*
  ports:
    - 1883:1883
